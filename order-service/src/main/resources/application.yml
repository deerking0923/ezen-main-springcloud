server:
  port: 10000

spring:
  application:
    name: order-service
#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest
#1차적으로 막아두기
  # zipkin:
  #   base-url: http://127.0.0.1:9411
  #   enabled: true
  datasource:
    url: ${DB_URL}                   # 예: jdbc:mysql://158.180.95.237:3306/ezen_main?useSSL=false&serverTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        "[show_sql]": true
        "[format_sql]": true
        jdbc:
          time_zone: Asia/Seoul
    hibernate:
      ddl-auto: update
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://localhost:3307/mydb
#    username: root
#    password: test1357

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

logging:
  level:
    com.example.orderservice: DEBUG
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health, httptrace, info, metrics, prometheus

